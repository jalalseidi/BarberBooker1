{
  "info": {
    "name": "Barber Booking System API",
    "description": "Complete API collection for testing the Barber Booking System with proper ObjectId references",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "barber-booking-system"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "barberId",
      "value": "",
      "type": "string"
    },
    {
      "key": "serviceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "bookingId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register Customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data._id) {",
                  "        pm.collectionVariables.set('userId', response.data._id);",
                  "        console.log('User ID saved:', response.data._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testcustomer@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login Customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.accessToken) {",
                  "        pm.collectionVariables.set('authToken', response.data.accessToken);",
                  "        pm.collectionVariables.set('userId', response.data._id);",
                  "        console.log('Auth token saved');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer1@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Barbers",
      "item": [
        {
          "name": "Get All Barbers",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.barbers.length > 0) {",
                  "        pm.collectionVariables.set('barberId', response.data.barbers[0]._id);",
                  "        console.log('Barber ID saved:', response.data.barbers[0]._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/barbers",
              "host": ["{{baseUrl}}"],
              "path": ["barbers"]
            }
          }
        },
        {
          "name": "Get Barber by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/barbers/{{barberId}}",
              "host": ["{{baseUrl}}"],
              "path": ["barbers", "{{barberId}}"]
            }
          }
        },
        {
          "name": "Get Barber Availability",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/barbers/{{barberId}}/availability?date=2024-01-15",
              "host": ["{{baseUrl}}"],
              "path": ["barbers", "{{barberId}}", "availability"],
              "query": [
                {
                  "key": "date",
                  "value": "2024-01-15"
                }
              ]
            }
          }
        },
        {
          "name": "Get Barber Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/barbers/{{barberId}}/reviews",
              "host": ["{{baseUrl}}"],
              "path": ["barbers", "{{barberId}}", "reviews"]
            }
          }
        },
        {
          "name": "Create Barber Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 5,\n  \"comment\": \"Excellent service! Very professional and skilled.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/barbers/{{barberId}}/reviews",
              "host": ["{{baseUrl}}"],
              "path": ["barbers", "{{barberId}}", "reviews"]
            }
          }
        }
      ]
    },
    {
      "name": "Services",
      "item": [
        {
          "name": "Get All Services",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.services.length > 0) {",
                  "        pm.collectionVariables.set('serviceId', response.data.services[0]._id);",
                  "        console.log('Service ID saved:', response.data.services[0]._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/services",
              "host": ["{{baseUrl}}"],
              "path": ["services"]
            }
          }
        },
        {
          "name": "Get Service by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/services/{{serviceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["services", "{{serviceId}}"]
            }
          }
        },
        {
          "name": "Get Services by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/services/category/haircut",
              "host": ["{{baseUrl}}"],
              "path": ["services", "category", "haircut"]
            }
          }
        },
        {
          "name": "Create Service (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Premium Haircut\",\n  \"nameEn\": \"Premium Haircut\",\n  \"nameTr\": \"Premium Saç Kesimi\",\n  \"description\": \"Premium haircut with consultation and styling\",\n  \"descriptionEn\": \"Premium haircut with consultation and styling\",\n  \"descriptionTr\": \"Danışmanlık ve şekillendirme ile premium saç kesimi\",\n  \"duration\": 45,\n  \"price\": 80,\n  \"category\": \"haircut\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/services",
              "host": ["{{baseUrl}}"],
              "path": ["services"]
            }
          }
        }
      ]
    },
    {
      "name": "Bookings",
      "item": [
        {
          "name": "Create Booking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.booking._id) {",
                  "        pm.collectionVariables.set('bookingId', response.data.booking._id);",
                  "        console.log('Booking ID saved:', response.data.booking._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"barberId\": \"{{barberId}}\",\n  \"serviceId\": \"{{serviceId}}\",\n  \"date\": \"2024-01-15\",\n  \"time\": \"10:00\",\n  \"specialRequests\": \"Please use scissors only, no razor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            }
          }
        },
        {
          "name": "Get All Bookings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            }
          }
        },
        {
          "name": "Get Booking by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "Update Booking",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"date\": \"2024-01-16\",\n  \"time\": \"11:00\",\n  \"status\": \"confirmed\",\n  \"specialRequests\": \"Please use scissors only, no razor. Updated request.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "Cancel Booking",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "{{bookingId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Database Seed Scripts",
      "item": [
        {
          "name": "Create Test User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        }
      ]
    }
  ]
}
